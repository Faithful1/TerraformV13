################################################### NETFLIX EUREKA SPRING BOOT ######################################################################



################################################### RDS MYSQL CONNECTION ############################################################################
# Spring Boot Application Secure Implementation Kubernetes/docker & docker-compose

yum install -y jq
apk add jq

# Sample Commands
###############################################################################################################################################
aws secretsmanager get-secret-value --secret-id username --region us-east-1
aws secretsmanager get-secret-value --secret-id username --region us-east-1 | grep -i SecretString | awk -F ":" '{print $2}' | cut -f 1 -d ","
aws secretsmanager get-secret-value --secret-id username --region us-east-1 | jq .SecretString
aws secretsmanager get-secret-value --secret-id username --region us-east-1 | jq .SecretString | jq fromjson

# Update Existing Secrets

aws secretsmanager update-secret --secret-id url --description "This is a new description for the secret." --secret-string "jdbc:mysql://springboot-db.ce9hcrwrmpdb.us-east-1.rds.amazonaws.com:3306/mysql"
################################################################################################################################################

# username
############################################################################################################
aws secretsmanager create-secret --name username --description "DB USER NAME" --secret-string asim
username=`aws secretsmanager get-secret-value --secret-id username --region us-east-1 | jq .SecretString`
dbuser=`echo $username`
############################################################################################################

# password
##################################################################################################################
aws secretsmanager create-secret --name password --description "DB PASSWORD" --secret-string 12345678
password=`aws secretsmanager get-secret-value --secret-id password --region us-east-1 | jq .SecretString`
dbpassword=`echo $password`
###################################################################################################################

# url
############################################################################################################################################################################
aws secretsmanager create-secret --name url --description "RDS END POINT" --secret-string "jdbc:mysql://springboot-db.ce9hcrwrmpdb.us-east-1.rds.amazonaws.com:3306/mysql"
url=`aws secretsmanager get-secret-value --secret-id url --region us-east-1 | jq .SecretString`
rdsendpoint=`echo $url`
###############################################################################################################################################################################


docker run --name springboot-rds-secrets -e url="$rdsendpoint" -e username="$dbuser" -e password="$dbpassword" -id quickbooks2018/spring-boot-secret-manager-rds-mysql-access:latest





# Docker Pass Actual Values

# Spring Boot Application Secure Implementation for AWS ECS

---> valuesfrom arnofthesecret




-e url "jdbc:mysql://springboot-db.cpcibk8hofat.us-east-1.rds.amazonaws.com:3306/mysql"

-e username "asim"

-e password "12345678"


docker run --name springboot-rds-secrets -e url="jdbc:mysql://springboot-db.ce9hcrwrmpdb.us-east-1.rds.amazonaws.com:3306/mysql" -e username="asim" -e password="12345678" -id quickbooks2018/spring-boot-secret-manager-rds-mysql-access:latest



### application.properties

spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=${url}
spring.datasource.username=${username}
spring.datasource.password=${password}

username=asim
password=12345678
url=jdbc:mysql://springboot-db.ce9hcrwrmpdb.us-east-1.rds.amazonaws.com:3306/mysql




### AWS CLI Installation ####

apk add --no-cache \
        python3 \
        py3-pip \
    && pip3 install --upgrade pip \
    && pip3 install \
        awscli \
    && rm -rf /var/cache/apk/* 